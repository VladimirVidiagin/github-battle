{"version":3,"file":"static/js/683.d9732730.chunk.js","mappings":"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","sources":["entities/Hover/Hover.tsx","shared/Tooltip/Tooltip.tsx","widgets/Table/Table.tsx","pages/PopularPage/PopularPage.tsx","pages/PopularPage/api/api.ts"],"sourcesContent":["import { useState, ReactNode } from \"react\";\r\n\r\ninterface HoverProps {\r\n  children: (hovering: boolean) => ReactNode;\r\n}\r\n\r\nconst Hover: React.FC<HoverProps> = ({ children }) => {\r\n  const [hovering, setHovering] = useState(false);\r\n\r\n  const mouseOver = () => {\r\n    setHovering(true);\r\n  };\r\n\r\n  const mouseOut = () => {\r\n    setHovering(false);\r\n  };\r\n\r\n  return (\r\n    <div onMouseOver={mouseOver} onMouseOut={mouseOut}>\r\n      {children(hovering)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Hover;\r\n","import { ReactNode } from \"react\";\r\nimport Hover from \"../../entities/Hover/Hover\";\r\n\r\nconst container = {\r\n  position: \"relative\",\r\n  display: \"flex\",\r\n};\r\n\r\nconst Tooltip: React.FC<{ element: ReactNode; children: ReactNode }> = ({\r\n  children,\r\n  element,\r\n}) => {\r\n  return (\r\n    <Hover>\r\n      {(hovering) => {\r\n        return (\r\n          //@ts-ignore\r\n          <div style={container}>\r\n            {hovering && element}\r\n            {children}\r\n          </div>\r\n        );\r\n      }}\r\n    </Hover>\r\n  );\r\n};\r\n\r\nexport default Tooltip;\r\n","import PropTypes from \"prop-types\";\r\nimport Tooltip from \"../../shared/Tooltip/Tooltip\";\r\nimport { hashtag } from \"../../shared/Icons/Icons\";\r\n\r\ninterface MoreInfoProps {\r\n  created_at: string;\r\n  language?: string;\r\n  updated_at: string;\r\n  watchers: number;\r\n  login: string;\r\n  forked_count: number;\r\n  type: string;\r\n}\r\n\r\nfunction MoreInfo({\r\n  created_at,\r\n  forked_count,\r\n  language,\r\n  updated_at,\r\n  watchers,\r\n  login,\r\n}: MoreInfoProps) {\r\n  return (\r\n    <ul className=\"tooltip stack\">\r\n      <li className=\"split\">\r\n        <span>By:</span> <span>{login}</span>\r\n      </li>\r\n      {language && (\r\n        <li className=\"split\">\r\n          <span>Language:</span> <span>{language}</span>\r\n        </li>\r\n      )}\r\n      <li className=\"split\">\r\n        <span>Created:</span>{\" \"}\r\n        <span>{new Date(created_at).toLocaleDateString()}</span>\r\n      </li>\r\n      <li className=\"split\">\r\n        <span>Updated:</span>{\" \"}\r\n        <span>{new Date(updated_at).toLocaleDateString()}</span>\r\n      </li>\r\n      <li className=\"split\">\r\n        <span>Watchers:</span>\r\n        <span>{watchers.toLocaleString()}</span>\r\n      </li>\r\n      {forked_count && (\r\n        <li className=\"split\">\r\n          <span>Forked:</span> <span>{forked_count.toLocaleString()}</span>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n}\r\n\r\nfunction TableHead() {\r\n  return (\r\n    <thead>\r\n      <tr>\r\n        <th style={{ width: \"5%\" }}>{hashtag}</th>\r\n        <th style={{ width: \"50%\" }}>Repository</th>\r\n        <th style={{ width: \"15%\" }}>Stars</th>\r\n        <th style={{ width: \"15%\" }}>Forks</th>\r\n        <th style={{ width: \"15%\" }}>OpenIssue</th>\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\ninterface TableRowProps {\r\n  index: number;\r\n  owner: {\r\n    login: string;\r\n    avatar_url: string;\r\n    type: string;\r\n  };\r\n  stargazers_count: number;\r\n  forks: number;\r\n  open_issues: number;\r\n  name: string;\r\n  created_at: string;\r\n  language: string;\r\n  updated_at: string;\r\n  watchers: number;\r\n  forked_count: number;\r\n}\r\n\r\nfunction TableRow({\r\n  index,\r\n  owner,\r\n  stargazers_count,\r\n  forks,\r\n  open_issues,\r\n  name,\r\n  created_at,\r\n  language,\r\n  updated_at,\r\n  watchers,\r\n  forked_count,\r\n}: TableRowProps) {\r\n  const { login, avatar_url, type } = owner;\r\n  return (\r\n    <tr>\r\n      <td>{index + 1}</td>\r\n      <td>\r\n        <Tooltip\r\n          element={\r\n            <MoreInfo\r\n              forked_count={forked_count}\r\n              created_at={created_at}\r\n              language={language}\r\n              updated_at={updated_at}\r\n              watchers={watchers}\r\n              type={type}\r\n              login={login}\r\n            />\r\n          }\r\n        >\r\n          <div className=\"row gap-md\">\r\n            <img\r\n              width={32}\r\n              height={32}\r\n              className=\"avatar\"\r\n              src={avatar_url}\r\n              alt={`Avatar for ${login}`}\r\n            />\r\n            <a href={`https://github.com/${login}/${name}`}>{name}</a>\r\n          </div>\r\n        </Tooltip>\r\n      </td>\r\n      <td>{stargazers_count}</td>\r\n      <td>{forks}</td>\r\n      <td>{open_issues}</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nTableRow.propTypes = {\r\n  index: PropTypes.number.isRequired,\r\n  owner: PropTypes.object.isRequired,\r\n  stargazers_count: PropTypes.number.isRequired,\r\n  forks: PropTypes.number.isRequired,\r\n  open_issues: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n};\r\n\r\ninterface TableProps {\r\n  repos: TableRowProps[];\r\n}\r\n\r\nexport default function Table({ repos }: TableProps) {\r\n  return (\r\n    <table>\r\n      <TableHead />\r\n      <tbody>\r\n        {repos.map((repo, index) => {\r\n          //@ts-ignore\r\n          return <TableRow key={index} index={index} {...repo} />;\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { fetchPopularRepos } from \"./api/api\";\r\nimport Table from \"../../widgets/Table/Table\";\r\n\r\ninterface LanguagesNavProps {\r\n  selectedLanguage: string;\r\n  onUpdateLanguage: (language: string) => void;\r\n}\r\n\r\nconst LanguagesNav: React.FC<LanguagesNavProps> = ({\r\n  selectedLanguage,\r\n  onUpdateLanguage,\r\n}) => {\r\n  const languages = [\"All\", \"JavaScript\", \"Ruby\", \"Java\", \"CSS\", \"Python\"];\r\n\r\n  return (\r\n    <select\r\n      onChange={(e) => onUpdateLanguage(e.target.value)}\r\n      value={selectedLanguage}\r\n    >\r\n      {languages.map((language) => (\r\n        <option key={language} value={language}>\r\n          {language}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n};\r\n\r\nLanguagesNav.propTypes = {\r\n  selectedLanguage: PropTypes.string.isRequired,\r\n  onUpdateLanguage: PropTypes.func.isRequired,\r\n};\r\n\r\nconst PopularPage: React.FC = () => {\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"All\");\r\n  const [repos, setRepos] = useState<any | null>(null);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  useEffect(() => {\r\n    updateLanguage(selectedLanguage);\r\n  }, [selectedLanguage]);\r\n\r\n  const updateLanguage = (selectedLanguage: string) => {\r\n    setSelectedLanguage(selectedLanguage);\r\n    setError(null);\r\n\r\n    fetchPopularRepos(selectedLanguage)\r\n      .then((repos) => {\r\n        setRepos(repos);\r\n        setError(null);\r\n      })\r\n      .catch((error) => {\r\n        console.warn(\"Error fetching repos \", error);\r\n        setError(\"There was an error fetching repositories\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <main className=\"stack main-stack animate-in\">\r\n      <div className=\"split\">\r\n        <h1>Popular</h1>\r\n        <LanguagesNav\r\n          selectedLanguage={selectedLanguage}\r\n          onUpdateLanguage={updateLanguage}\r\n        />\r\n      </div>\r\n\r\n      {error && <p className=\"text-center error\">{error}</p>}\r\n\r\n      {repos && <Table repos={repos} />}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PopularPage;\r\n","import { Profile } from \"../../../app/types/profiles\";\r\n\r\nconst id: string = \"YOUR_CLIENT_ID\";\r\nconst sec: string = \"YOUR_SECRET_ID\";\r\nconst params: string = `?client_id=${id}&client_secret=${sec}`;\r\n\r\nexport function fetchPopularRepos(language: string): Promise<any[]> {\r\n  const endpoint: string = window.encodeURI(\r\n    `https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`\r\n  );\r\n\r\n  return fetch(endpoint)\r\n    .then((res) => res.json())\r\n    .then((data) => {\r\n      if (!data.items) {\r\n        throw new Error(data.message);\r\n      }\r\n      return data.items;\r\n    });\r\n}\r\n\r\nfunction getErrorMsg(message: string, username: string): string {\r\n  if (message === \"Not Found\") {\r\n    return `${username} doesn't exist`;\r\n  }\r\n  return message;\r\n}\r\n\r\nfunction getProfile(username: string): Promise<any> {\r\n  return fetch(`https://api.github.com/users/${username}${params}`)\r\n    .then((res) => res.json())\r\n    .then((profile) => {\r\n      if (profile.message) {\r\n        throw new Error(getErrorMsg(profile.message, username));\r\n      }\r\n      return profile;\r\n    });\r\n}\r\n\r\nfunction getRepos(username: string): Promise<any[]> {\r\n  return fetch(\r\n    `https://api.github.com/users/${username}/repos${params}&per_page=100`\r\n  )\r\n    .then((res) => res.json())\r\n    .then((repos) => {\r\n      if (repos.message) {\r\n        throw new Error(getErrorMsg(repos.message, username));\r\n      }\r\n      return repos;\r\n    });\r\n}\r\n\r\nfunction getStarCount(repos: any[]): number {\r\n  return repos.reduce((count, { stargazers_count }) => {\r\n    return count + stargazers_count;\r\n  }, 0);\r\n}\r\n\r\nfunction calculateScore(followers: number, repos: any[]): number {\r\n  return followers * 3 + getStarCount(repos);\r\n}\r\n\r\nfunction getUserData(\r\n  player: string\r\n): Promise<{ profile: Profile; score: number }> {\r\n  return Promise.all([getProfile(player), getRepos(player)]).then(\r\n    ([profile, repos]) => ({\r\n      profile,\r\n      score: calculateScore(profile.followers, repos),\r\n    })\r\n  );\r\n}\r\n\r\nfunction sortPlayers(players: { score: number }[]): { score: number }[] {\r\n  return players.sort((a, b) => b.score - a.score);\r\n}\r\n\r\nexport function battle(players: string[]): Promise<{ score: number }[]> {\r\n  return Promise.all([getUserData(players[0]), getUserData(players[1])]).then(\r\n    sortPlayers\r\n  );\r\n}\r\n"],"names":["_ref","children","hovering","setHovering","useState","_jsx","onMouseOver","mouseOver","onMouseOut","mouseOut","container","position","display","element","Hover","_jsxs","style","MoreInfo","created_at","forked_count","language","updated_at","watchers","login","className","Date","toLocaleDateString","toLocaleString","TableHead","width","hashtag","TableRow","_ref2","index","owner","stargazers_count","forks","open_issues","name","avatar_url","type","Tooltip","height","src","alt","concat","href","Table","_ref3","repos","map","repo","LanguagesNav","selectedLanguage","onUpdateLanguage","onChange","e","target","value","PopularPage","setSelectedLanguage","setRepos","error","setError","useEffect","updateLanguage","fetchPopularRepos","then","catch","console","warn","params","endpoint","window","encodeURI","fetch","res","json","data","items","Error","message","getErrorMsg","username","getRepos","calculateScore","followers","reduce","count","getStarCount","getUserData","player","Promise","all","profile","score","sortPlayers","players","sort","a","b","battle"],"sourceRoot":""}